" Byron Batteson
" This file automatically folds all sections. Use 'za' to unfold a section.

" Initialization {{{
let vimfiles = fnamemodify($MYVIMRC, ":p:h") 

" Download vim-plug
let data_dir = has('nvim') ? stdpath('data') . '/site' : vimfiles
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif
" }}}
" Plugins {{{
call plug#begin(vimfiles.'/bundle')
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'itchyny/lightline.vim'
Plug 'rust-lang/rust.vim'
Plug 'ryanoasis/vim-devicons'
Plug 'tpope/vim-abolish'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-sleuth'
Plug 'tpope/vim-surround'
Plug 'szw/vim-maximizer'
Plug 'puremourning/vimspector'
Plug 'honza/vim-snippets'
Plug 'SirVer/ultisnips'
Plug 'morhetz/gruvbox'
Plug 'lervag/vimtex'
Plug 'dijkstracula/vim-plang'
Plug 'godlygeek/tabular'
Plug 'dhruvasagar/vim-table-mode'
Plug 'HiPhish/jinja.vim'
if has('nvim')
  Plug 'nvim-treesitter/nvim-treesitter', {'do': 'TSUpdate'}
  Plug 'nvim-treesitter/nvim-treesitter-context', {'do': 'TSUpdate'}
  Plug 'nvim-treesitter/playground', {'do': 'TSUpdate'}
  Plug 'nvim-lua/plenary.nvim'
  Plug 'nvim-telescope/telescope.nvim'
  Plug 'neovim/nvim-lspconfig'
else
  Plug 'ctrlpvim/ctrlp.vim'
end
call plug#end()
" }}}
" Shortcuts {{{
nnoremap <space> <nop>
let mapleader=" "
" }}}
" Behavior {{{
set bs=2                  " enable expected backspace behaviors
set ruler                 " show row and column number in the status bar
set ttimeoutlen=50        " reduce timeout for Vim to determine if the terminal will use an escape sequence
filetype plugin indent on " keep indent based on file-type

if has('mouse')
  set mouse=a
endif

" custom ignore list for expanding wildcards
if has('win32')
  set wildignore+=*\\tmp\\*,*.swp,*.zip,*.exe,*\\node_modules\\*
else
  set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*/node_modules/*
endif

" spell checking
set spell
set spelllang=en_us,en_gb
inoremap <C-l> <C-g>u<Esc>[s1z=`]a<C-g>u

" OS-specific overrides
if has('win32') || has('win64')
  " Disable suspend shortcut
  nmap<C-z> <Esc>:echoerr 'Suspend is not enabled on Windows'<CR>
  vmap<C-z> <Esc>:echoerr 'Suspend is not enabled on Windows'<CR>
endif

" Omnifunc settings
set completeopt-=preview      " disable scratch buffer

"}}}
" Custom behavior {{{
" Allow for custom overrides for individual devices
if filereadable(expand("~/.vim_overrides"))
  source ~/.vim_overrides
endif

" Keep searches centered
nnoremap n nzzzv
nnoremap N Nzzzv

" Keep cursor stationary for line joins
nnoremap J mzJ`z

" Add custom undo breakpoints
inoremap , ,<C-g>u
inoremap . .<C-g>u
inoremap ! !<C-g>u
inoremap ? ?<C-g>u

" Add movable selections
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv
" inoremap <C-j> :m .+1<CR>==
" inoremap <C-k> :m .-2<CR>==
nnoremap <leader>j :m .+1<CR>==
nnoremap <leader>k :m .-2<CR>==
" }}}
" Colors {{{
syntax enable           " enable syntax processing
" }}}
" Theme {{{
let g:gruvbox_italic=1  " enable italics
set background=dark     " force dark theme
colorscheme gruvbox     " set theme
if !has('macunix')
  set termguicolors
endif
" hi SpellBad guibg=#ff2929 ctermbg=224
hi SpellBad gui=underline guifg=#fb4934 cterm=underline
" }}}
" Folding {{{
set foldenable          " enable folding
set foldlevelstart=10   " open most folds by default
set foldnestmax=10      " 10 nested fold max
set foldmethod=indent   " fold based on indent level
" }}}
" Formatting {{{
set encoding=UTF-8      " use utf-8 encoding
set tw=80               " set text width to 80 characters
set guifont=JetBrains_Mono:h17:cANSI:qDRAFT
" }}}
" Searching {{{
set incsearch           " search as characters are entered
set nohlsearch          " turn off search highlights
set ic                  " turn on ignore case mode
set smartcase           " ignore ic if there is a capital letter in the search
" }}}
" Spacing {{{
set tabstop=2           " number of visual spaces per tab
set softtabstop=2       " number of spaces in tab when editing
set expandtab           " tabs are spaces
set shiftwidth=2        " shift width is the same as our tab size
" }}}
" User Interface {{{
set number              " show line number for current line
set relativenumber      " show relative line numbers
set showcmd             " show last command in status bar
" set cursorline          " highlight current line
set wildmenu            " visual autocomplete for command menu
set lazyredraw          " redraw only when there is a visual change
set showmatch           " highlight matching [{()}]
set laststatus=2        " show the status line
" }}}
" Meta Configuration {{{
set modeline
set modelines=2
" vim:foldmarker={{{,}}}
" vim:foldmethod=marker:foldlevel=0
" }}}
